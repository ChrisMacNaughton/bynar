syntax = "proto2";
option optimize_for = SPEED;

package ceph_disk;

message Osd {
  optional string fsid = 1;
  required uint64 id = 2;
  optional string block_device = 3;
  // Active or spare
  required bool active = 4;

  // Usage details
  required uint64 used_space = 5;
  required uint64 total_space = 6;
}

// This will be added in a future version
//message RepairResponse {
  //required bool corrupted = 1;
  //required bool repaired = 2;
  //required bool in_progress = 3;
  //required string tracking_ticket_id = 4;
  //required Disk disk = 5;
  //optional string mount_path = 6;
//}

message Disk {
  required DiskType type = 1;
  required string dev_path = 2;
  optional string serial_number = 3;
}

enum DiskType {
  // AKA SSD
  SOLID_STATE = 0;
  // Regular rotational device
  ROTATIONAL = 1;
  // Special loopback device
  LOOPBACK = 2;
  // Logical volume device
  LVM = 3;
  // Ramdisk
  RAM = 4;
  VIRTUAL = 5;
  UNKNOWN = 6;
}

message Disks {
  repeated Disk disk = 1;
}

message OpResult {
  required ResultType result = 1;
  optional string error_msg = 2;
  enum ResultType{
    OK = 0;
    ERR = 1;
  }
}

enum Op{
   //return OpResult
   Add = 1;
   //returns RepairResponse
   //Check = 2;
   // Returns Disks
   List = 3;
   //Returns OpResult
   Remove = 4;
}

// Service operations that can be performed
message Operation {
  required Op Op_type = 1;
  optional string disk = 2;
}
